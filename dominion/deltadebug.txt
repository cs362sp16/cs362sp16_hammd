In order to complete step three of the final project I choose to use delta debugging tools to minimize a failing test case. I had a vague understanding of delta debugging at the start which resulted in extra time spent researching. I learned that one process of minimizing a failing test case using delta debugging involves modifying a failing test case as to remove all unnecessary code while still maintaining that the test fails. Another approach to test minimization is to focus on the inputs. The first step for me in this task was to find the available delta debugging tools. At first I was trying to use the eclipse plugin but I ran into system/environment problems. My next step was to find the python script provided by Prof. Zeller. While attempting to follow the tutorial I found that the version of python in which the script was implemented with was outdated. Before I could finish the tutorial I had to debug the script as I tried to build in order to determine what calls were depreciated and what syntax was changed or no longer supported. During this process I thought that I could speed up this task by writing a couple of scripts that would have made the required changes that were common. The harder changes related to depreciated function calls. Thinking back I might have been better off modifying my environment to support the older version of python than to try to change the script itself.
Some of the errors I encountered made it hard for me to judge whether or not my changes were inline with the tutorials intentions. I currently have access to a windows system which limits me from using the ulimit command option. My lack of technical expertise in python also contributed to my difficulties in making valid changes. I was surprised that there seems to be very few tutorials in this area. After I made modifications to the script I decided to use the delta debugging tools to minimize the failing test cases of my unit test of initializeGame. 