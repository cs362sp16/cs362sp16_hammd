When creating the random testers I focused on generating states that were valid for playing the card under test. I wanted to create a function that took a card value as input in order to reuse this random state generator for testing other action cards. Most of my effort was spent creating the random state generator. One problem I encountered when trying to call free() on the gameState struct was that some values were not being reset. It looked like all arrays maintained their values even after calling malloc() on a new gameState struct. My knowledge in c is limited so i'm not sure if this was the expected behavior. My solution was to initialize all arrays to contain the value of -1 for each cell. This seemed to work as I assume the game treats -1 as empty for cards and such.

After I created my random state generator for action cards I wrote the two required files as described by this assignment. The tests focused on looking at the generated state and checking that is was transformed correctly to the next state upon calling cardEffect().

A weakness to my design revolves around my implementation of the random state. Some states are only achievable after playing certain cards. I choose to forgor the requirement that those cards were actually played and instead just created the resulting states. I choose this approach because I believe that the current implementation is adequate to complete this assignment but may require some redesign if requirements were to change.

I tried to allocate/deallocate whenever I could to prevent memory constraints. During generation of possible kingdom cards I use multiple arrays to copy values from a large pool until the game has 10 different kingdom cards. Instead of playing with memory I could probably use flags and sorting to cut down on memory use.

Looks like my randomtestadventurer.c was getting an extra 2% test coverage by running after all previous unit and card tests(not includeing randomtestcard.c). On its own it gets about 17% coverage. My randomtestcard.c was used to test the steward cardeffect and it was getting around 1% test coverage after all other tests were run. After viewing the test results it looks like cardeffect does not store played cards as it just discards them. Managing coins is off as well as the number of actions in some cases. Overall, the way in which the game currently manages cards seems to be incorrect.